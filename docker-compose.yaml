version: '3.9'

services:

  aspnet_core:
    container_name: aspnet_core
    ports:
      - "5000:5000"
      - "5001:5001"
    build: ./AspNetCore-keycloak/keycloakAuthDotNet6/.
    networks:
      - auth-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Production # Using Production instead of Development because we have signed SSL certificates
      - ASPNETCORE_URLS=https://+:5001;http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.step/certs/root_ca.crt 
    #  - ASPNETCORE_Kestrel__Certificates__Default__Password=mypass123
    # pull value from docker-compose.env for CA fingerprint location
    env_file:
      - docker-compose.env
    volumes:
      - ./shared_volume:/shared_volume
      - ./step/scripts:/home/scripts/
    command: sh /home/scripts/init_aspnet.sh

  keycloak_db:
    container_name: keycloak_db
    image: 'postgres'
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "6000:5432"
    networks:
      - auth-network

  keycloak_two:
    container_name: keycloak_two
    image: keycloak/keycloak
    ports: 
      - "8080:8080"
      - "443:8443" # by default, KC in prod mode listens on 8443
    depends_on:
      - keycloak_db
      - certificate_generator
    environment:
      DB_VENDOR: "POSTGRES"
      DB_ADDR: keycloak_db
      DB_PORT: 6000
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: user
      KEYCLOAK_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: pass
    restart: always # set up in prod mode behind nginx
    # currently running using self-signed certs in mounted volume
    entrypoint: bash /home/scripts/init_keycloak.sh
    env_file:
      - docker-compose.env
    networks:
      - auth-network
    volumes:
      - ./AspNetCore-keycloak/keycloakAuthDotNet6/certs:/https_certs:ro
      - ./step/scripts:/home/scripts/
      - ./shared_volume:/shared_volume
      - type: bind
        source: ./step/keycloak_certs
        target: /home/keycloak_certs
# https://smallstep.com/docs/tutorials/docker-tls-certificate-authority/#manual-installation
# used as a CA to allow trust of keycloak certs
  smallstep_ca:
    container_name: smallstep_ca
    image: smallstep/step-ca
    ports:
      - "6783:6783"
    volumes:
      - ./step/passwords:/home/passwords
      - ./step/mount:/home/step
      - ./step/certs:/home/certs
      - ./step/scripts:/home/scripts
      - ./shared_volume:/shared_volume
    command: bash /home/scripts/init_smallstep.sh
    stdin_open: true 
    tty: true       
    env_file:
    - docker-compose.env
    networks:
      - auth-network

  certificate_generator:
    container_name: certificate_generator
    image: jitesoft/step-cli:latest
    networks:
      - auth-network
    depends_on:
      - smallstep_ca
    volumes:
      - type: bind
        source: ./step/keycloak_certs
        target: /keycloak_certs
      - ./step/scripts:/home/scripts
      - ./step/certs:/step/certs
      - ./shared_volume:/shared_volume
    command: sh /home/scripts/init_script_gen.sh
    env_file:
      - docker-compose.env

networks:
  auth-network:
    driver: bridge

volumes:
  keycloak_certs: 